# Created with package:mono_repo v3.4.7
language: dart

jobs:
  include:
    - stage: analyze
      name: mono_repo self validate
      os: linux
      script: "pub global activate mono_repo 3.4.7 && pub global run mono_repo generate --validate"
    - stage: analyze
      name: "PKGS: dispatchable, dispatchable_client_test, dispatchable_generator, dispatchable_project_example; `dartanalyzer .`"
      dart: stable
      os: linux
      env: PKGS="dispatchable dispatchable_client_test dispatchable_generator dispatchable_project_example"
      script: tool/ci.sh dartanalyzer
    - stage: analyze
      name: "PKGS: dispatchable, dispatchable_client_test, dispatchable_generator, dispatchable_project_example; `dartfmt -n --set-exit-if-changed .`"
      dart: stable
      os: linux
      env: PKGS="dispatchable dispatchable_client_test dispatchable_generator dispatchable_project_example"
      script: tool/ci.sh dartfmt
    - stage: analyze
      name: "PKGS: dispatchable_client_test, dispatchable_project_example; `pub run build_runner build --delete-conflicting-outputs`"
      dart: stable
      os: linux
      env: PKGS="dispatchable_client_test dispatchable_project_example"
      script: tool/ci.sh command_0
    - stage: unit_test
      name: "PKG: dispatchable; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="dispatchable"
      script: tool/ci.sh test
    - stage: unit_test
      name: "PKG: dispatchable_client_test; `pub run build_runner test --delete-conflicting-outputs`"
      dart: stable
      os: linux
      env: PKGS="dispatchable_client_test"
      script: tool/ci.sh command_1
    - stage: unit_test
      name: "PKG: dispatchable_client_test; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="dispatchable_client_test"
      script: tool/ci.sh test
    - stage: unit_test
      name: "PKG: dispatchable_generator; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="dispatchable_generator"
      script: tool/ci.sh test

stages:
  - analyze
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - $HOME/.pub-cache
    - dispatchable/.dart_tool/build
    - dispatchable_generator/.dart_tool/build
